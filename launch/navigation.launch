<?xml version="1.0"?>
<launch>
  <!--env name="TURTLEBOT3_MODEL" value="burger"/-->
  <!--<arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="move_forward_only" default="false"/>-->
  <arg name="map_file" default="$(find navigationturt)/maps/map_new.yaml"/>
  <arg name="open_rviz" default="true"/>
  <arg name="node_start_delay" default="3.0"/>
  <!-- <arg name="use_objectives_file" default="true"/>
  <arg name="objectives_file_location" default="/catkin_ws/src/navigationturt/scripts/objectives.txt"/> -->
  <arg name="uv_cleaning" default="false"/>

  <!-- AMCL -->
  <include file="$(find navigationturt)/launch/include/amcl.launch"/>
  
  <!-- MAP SERVER -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

  <!-- INITIAL POSITION -->
  <node pkg="navigationturt"
        type="initial_position.py" 
        name="initializer"
        >
    <param name="~target_frame" value="base_footprint"/>
    <param name="~source_frame" value="odom"/>
  </node>

  <!-- RVIZ -->
  <group if="$(arg open_rviz)"> 
    <group if="$(arg uv_cleaning)"> 
      <node pkg="rviz" type="rviz" name="rviz" required="true"
            args="-d $(find navigationturt)/rviz/turtlebot3_uv_cleaning.rviz"/>
    </group>
    <group unless="$(arg uv_cleaning)"> 
      <node pkg="rviz" type="rviz" name="rviz" required="true"
            args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>
    </group>
  </group>
    
    <!-- GOAL BROADCASTER NODE -->
  <!--<group unless="$(arg uv_cleaning)">
    <node name="action_move_base" 
    pkg="navigationturt" 
    type="action_move_base.py" 
    respawn="true"
    output="screen" 
    args="" 
    launch-prefix="xterm -e /bin/bash -c 'sleep $(arg node_start_delay); $0 $@' "
    >
      <param name="~objectives_file_location" value="$(arg objectives_file_location)"/>
    </node>
  </group>-->

  <group if="$(arg uv_cleaning)">
    <node name="cleaner" 
    pkg="navigationturt" 
    type="uv_cleaner.py" 
    respawn="true"
    output="screen" 
    args="" 
    launch-prefix="xterm -e /bin/bash -c 'sleep $(arg node_start_delay); $0 $@' "
    /><!---->
  </group>

</launch>